dam <- c("2A11","2A11","2A12","2A12","2A12","4D23","4D23","1X23")
bdate <- c("2009-10-01","2009-10-01","2009-10-01","2009-10-01",
"2009-10-01","2009-10-03","2009-10-03","2009-10-03")
mydf <- data.frame(dam,bdate)
str(mydf)
str(babynames)
babynames$name %<>% as.factor()
library(stringr);library(babynames);library(ggplot2);library(dplyr)
babynames$name %<>% as.factor()
library(stringr);library(babynames);library(ggplot2);library(dplyr);library(magrittr)
babynames$name %<>% as.factor()
str(babynames)
totalnames <- aggregate(name ~ year + sex,babynames,count)
str(totalnames)
head(totalnames)
totalnames <- aggregate(name,babynames,count)
count(babynames,'name')
babynames %>% group_by(year)
babynames %>% group_by(year)
babynames %>% count(babynames,'name')
babynames %>% count(.,'name')
?count
?sum
babynames %>% count(.,'name') %>% sum(freq)
babynames %>% count(.,'name') %>% colSUms(freq)
babynames %>% count(.,'name') %>% colSums(freq)
babynames %>% count(.,'name') %>% colSums()
babynames %>% count(.,'name') %>% select(freq) %>% sum()
Nbabies <- babynames[index1,]
totalnames <- babynames %>% count(.,'name') %>% select(freq) %>% sum()
N_names <- Nbabies %>% count(.,'name') %>% select(freq) %>% sum()
library(stringr);library(babynames);library(ggplot2);library(dplyr);library(magrittr)
babynames$name %<>% as.factor()
table(babynames$year)
str(table(babynames$year))
totalnames <- table(babynames$year)
head(totalnames)
totalnames[,:]
totalnames*2
Nnames <- table(Nbabies$year)
plot(totalnames)
plot(Nnames/totalnames)
plot(Nnames/totalnames*100,main='Proportion of names ending in -n',ylab = 'Percent')
N2total <- babynames %>% table(.$year)
totalchildren <- aggregate(n ~ year + sex,babynames,sum)
index1 <- with(babynames,grepl("*n$",name))
Nbabies <- babynames[index1,]
totalNchildren <- Nnames %>% aggregate(n ~ year + sex,.,sum)
totalNchildren <- Nbabies %>% aggregate(n ~ year + sex,.,sum)
with(totalNchildren,plot(year,n))
with(totalNchildren,plot(year,n,by=sex))
with(totalNchildren,plot(year,n*10,ylab='Millions of babies',main='Number of children born with names ending in -n'))
with(totalNchildren[sex=='M'],plot(year,n*10,ylab='Millions of babies',main='Number of children born with names ending in -n'))
with(totalNchildren[sex=='M',],plot(year,n*10,ylab='Millions of babies',main='Number of children born with names ending in -n'))
str(totalNchildren)
totalNchildren <- Nbabies %>% aggregate(n ~ year + sex,.,sum) %>%
ggplot(.,aes(year,n*10,color=sex))+geom_point()
totalNchildren <- Nbabies %>% aggregate(n ~ year + sex,.,sum)
ggplot(totalNchildren,aes(year,n*10,color=sex))+geom_point()
ggplot(totalNchildren,aes(year,n*10,color=sex))+geom_point()+ylab('Billions of babies')+main('Number of children born with names ending in -n')
?ylab
ggplot(totalNchildren,aes(year,n*10,color=sex))+geom_point()+ylab('Billions of babies',scientific=FALSE)+
ggtitle('Number of children born with names ending in -n')+
# total names used ending in n
totalnames <- babynames %>% count(.,'name') %>% select(freq) %>% sum()
ggplot(totalNchildren,aes(year,n*1e-5,color=sex))+geom_point()+ylab('Billions of babies')+
ggtitle('Number of children born with names ending in -n')+
# total names used ending in n
totalnames <- babynames %>% count(.,'name') %>% select(freq) %>% sum()
ggplot(totalNchildren,aes(year,n*1e-5,color=sex))+geom_point()+ylab('Billions of babies')+
ggtitle('Number of children born with names ending in -n')+
# total names used ending in n
totalnames <- babynames %>% count(.,'name') %>% select(freq) %>% sum()
ggplot(totalNchildren,aes(year,n*1e-5,color=sex))+geom_point()+ylab('Billions of babies')+
ggtitle('Number of children born with names ending in -n')
ggsave('#n names.png')
plot(Nnames/totalnames*100,main='Proportion of names ending in -n',ylab = 'Percent',xlab='Year')
least <- babynames[babynames$prop < 0.00001]
least <- babynames[babynames$prop < 0.00001,]
least
least <- babynames[babynames$prop < 0.000001,]
least %>% str
least %T>% str %T>% write.csv('0.0001%.csv')
least <- babynames[babynames$prop < 0.001,]
least %T>% str %T>% write.csv('0.0001%.csv')
least %T>% str %T>% write.csv('C:/Users/cdhig/Desktop/Rshrapnel/babynames/0.0001%.csv')
babynames[babynames$year==1880,'prop']
babynames[babynames$year==1880,'prop'] %>% sum
Puromycin %>% str
Puromycin
plot(rate,conc,data=Puromycin)
ggplot(Puromycin,aes(conc,rate,color=state))+geom_point()
library(ggplot2)
ggplot(Puromycin,aes(conc,rate,color=state))+geom_point()
library(ggplot2)
?geom_smooth
str(Puromycin)
ggplot(Puromycin,aes(conc,rate,color=state))+geom_point()+
geom_smooth(formula = rate ~ conc*Vmax/(Km + conc))
ggplot(Puromycin,aes(conc,rate,color=state))+geom_point()+
geom_smooth(formula = rate ~ conc*Vmax/(Km + conc),
method.args=list('Vmax'=100,'Km'=1))
ggplot(Puromycin,aes(conc,rate,color=state))+geom_point()+
geom_smooth(formula = rate ~ conc*Vmax/(Km + conc),
method.args=list(Vmax=100,Km=.05))
ggplot(Puromycin,aes(conc,rate,color=state))+geom_point()+
geom_smooth(method='lm',
formula = rate ~ conc*Vmax/(Km + conc),
method.args=list(Vmax=100,Km=.05))
plot(rate ~ conc, data = Puromycin, las = 1,
xlab = "Substrate concentration (ppm)",
ylab = "Reaction velocity (counts/min/min)",
pch = as.integer(Puromycin$state),
col = as.integer(Puromycin$state),
main = "Puromycin data and fitted Michaelis-Menten curves")
fm1 <- nls(rate ~ Vm * conc/(K + conc), data = Puromycin,
subset = state == "treated",
start = c(Vm = 200, K = 0.05))
fm2 <- nls(rate ~ Vm * conc/(K + conc), data = Puromycin,
subset = state == "untreated",
start = c(Vm = 160, K = 0.05))
conc <- seq(0, 1.2, length.out = 101)
lines(conc, predict(fm1, list(conc = conc)), lty = 1, col = 1)
lines(conc, predict(fm2, list(conc = conc)), lty = 2, col = 2)
legend(0.8, 120, levels(Puromycin$state),
col = 1:2, lty = 1:2, pch = 1:2)
plot(rate ~ conc, data = Puromycin, las = 1,
xlab = "Substrate concentration (ppm)",
ylab = "Reaction velocity (counts/min/min)",
pch = as.integer(Puromycin$state),
col = as.integer(Puromycin$state),
main = "Puromycin data and fitted Michaelis-Menten curves")
fm1 <- nls(rate ~ Vm * conc/(K + conc), data = Puromycin,
subset = state == "treated",
start = c(Vm = 200, K = 0.05))
conc <- seq(0, 1.2, length.out = 101)
fm2 <- nls(rate ~ Vm * conc/(K + conc), data = Puromycin,
subset = state == "untreated",
start = c(Vm = 160, K = 0.05))
lines(conc, predict(fm1, list(conc = conc)), lty = 1, col = 1)
lines(conc, predict(fm2, list(conc = conc)), lty = 2, col = 2)
legend(0.8, 120, levels(Puromycin$state),
col = 1:2, lty = 1:2, pch = 1:2)
write.csv(Puromycin,'Desktop/Puromycin.csv')
write.csv(Puromycin)
write.csv(Puromycin,"Desktop\Puromycin_michaelis_Menten.csv")
write.csv(Puromycin,"Desktop/Puromycin_michaelis_Menten.csv")
write.csv(Puromycin,"Puromycin_michaelis_Menten.csv")
?Puromycin
summary(fm1)
fm2
library(ggplot2);require(xlsx)
read.xlsx2('C:/Users/cdhig/Documents/Pitt/Background - Blood/Hematocrit/HolderFailures',startRow=2,colClasses = NA)
read.xlsx2('C:/Users/cdhig/Documents/Pitt/Background - Blood/Hematocrit/HolderFailures',startRow=2,sheetIndex=1,colClasses = NA)
read.xlsx2('C:/Users/cdhig/Documents/Pitt/Background - Blood/Hematocrit/HolderFailures.xlsx',startRow=2,sheetIndex=1,colClasses = NA)
data <- read.xlsx2('C:/Users/cdhig/Documents/Pitt/Background - Blood/Hematocrit/HolderFailures.xlsx',startRow=2,sheetIndex=1,colClasses = NA)
index <- seq(1,NROW(data),by=2)
index
plugs <- data[index,]
plugs
index <- seq(2,NROW(data),by=2)
plugs <- data[index,]
plugs
?reshape
plugs %>% reshape(.,varying=c('X1','X2','X3','X4','X5'),idvar='Run')
library(ggplot2);require(xlsx);require(dplyr)
plugs %>% reshape(.,varying=c('X1','X2','X3','X4','X5'),idvar='Run')
plugs %>% reshape(.,varying=c('X1','X2','X3','X4','X5'),idvar='Run',direction='long')
str(indometh)
str(Indometh)
summary(Indometh)
head(Indometh)
reshape(Indometh, v.names = "conc", idvar = "Subject",
timevar = "time", direction = "wide")
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",
timevar = "time", direction = "wide")
reshape(plugs,idvar='Run',timevar = NULL,varying=c('X1','X2','X3','X4','X5'),v.names='X',direction='long')
reshape(plugs,idvar='Run',timevar = NULL,varying=c('X1','X2','X3','X4','X5'),v.names='Loss',direction='long')
reshape(plugs,idvar='Run',timevar = 'Run',varying=c('X1','X2','X3','X4','X5'),v.names='Loss',direction='long')
library(ggplot2);require(xlsx);require(tidyr)
plugs %>% gather(.,'Holder','Loss',c('X1','X2','X3','X4','X5'))
plugs %>% gather(.,'Holder','Loss',c('X1','X2','X3','X4','X5')) %T>%
ggplot(.,aes(Run,Loss,shape=Holder))+
geom_point()
library(ggplot2);require(xlsx);require(tidyr);library(magrittr)
plugs %>% gather(.,'Holder','Loss',c('X1','X2','X3','X4','X5')) %T>%
ggplot(.,aes(Run,Loss,shape=Holder))+
geom_point()
data <- read.xlsx2('C:/Users/cdhig/Documents/Pitt/Background - Blood/Hematocrit/HolderFailures.xlsx',startRow=2,sheetIndex=1,colClasses = NA)
index <- seq(2,NROW(data),by=2)
plugs <- data[index,]
plugs %>% gather(.,'Holder','Loss',c('X1','X2','X3','X4','X5')) %T>%
ggplot(.,aes(Run,Loss,shape=Holder))+
geom_point()
plugs %<>% gather(.,'Holder','Loss',c('X1','X2','X3','X4','X5'))
ggplot(.,aes(Run,Loss,shape=Holder))+
geom_point()
ggplot(plugs,aes(Run,Loss,shape=Holder))+
geom_point()
ggplot(plugs,aes(Run,Loss,color=Holder))+
geom_point()
ggplot(plugs,aes(Run,Loss,color=Holder))+
geom_point()+geom_jitter()
plugs %<>% gather(.,'Holder','Loss',c('X1','X2','X3','X4','X5')) %>% str
plugs <- data[index,]
plugs %>% gather(.,'Holder','Loss',c('X1','X2','X3','X4','X5')) %>% str
ggplot(plugs,aes(Holder,Loss,color=Run))+
geom_point()+geom_jitter()
plugs %<>% gather(.,'Holder','Loss',c('X1','X2','X3','X4','X5')) %>% str
ggplot(plugs,aes(Holder,Loss,color=Run))+
geom_point()+geom_jitter()
ggplot(plugs,aes(as.factor(Holder),Loss,color=Run))+
geom_point()+geom_jitter()
plugs
plugs <- data[index,]
plugs <- data[index,] %>% gather(.,'Holder','Loss',c('X1','X2','X3','X4','X5')) %>% str
ggplot(plugs,aes(Holder,Loss,color=Run))+
geom_point()+geom_jitter()
plugs <- data[index,] %>% gather(.,'Holder','Loss',c('X1','X2','X3','X4','X5')) %T>% str
ggplot(plugs,aes(Holder,Loss,color=Run))+
geom_point()+geom_jitter()
ggplot(plugs,aes(Holder,Loss,color=as.factor(Run)))+
geom_point()+geom_jitter()
plugs
?geom_jitter
ggplot(plugs,aes(Holder,Loss,color=as.factor(Run)))+
geom_point()+geom_jitter(width=0.2)
+geom_lines()
+geom_line()
ggplot(plugs,aes(Holder,Loss,color=as.factor(Run)))+
geom_point()+geom_jitter(width=0.2)+geom_line()
ggplot(plugs,aes(Holder,Loss,color=as.factor(Run)))+
geom_line()+geom_jitter(width=0.2)
ggplot(plugs,aes(Holder,Loss))+
geom_line()+geom_jitter(width=0.2)
ggplot(plugs,aes(Run,Loss))+
geom_line()
ggplot(plugs,aes(Run,Loss))+
geom_line(aes(color=Holder))
ggplot(plugs,aes(as.factor(Run),Loss))+
geom_line(aes(color=Holder))
ggplot(plugs,aes(Run,Loss))+
geom_line(aes(color=Holder))
library("Rcmdr", lib.loc="~/R/win-library/3.4")
plugs$Loss==0
plugs
plugs$Loss==1
plugs$Failure <- plugs$Loss==1
table(plugs)
table(plugs$Failure)
table(plugs$Loss)
table(plugs$Failure)
6/15
GeometricSamples
str(GeometricSamples)
library("Rcmdr", lib.loc="~/R/win-library/3.4")
Dataset[2:,]
Dataset[2:8,]
Dataset[2:8,] %>% lm(g_plas2 ~ g_plas1)
library(tidyr)
Dataset[2:8,] %>% lm(g_plas2 ~ g_plas1)
Dataset[2:8,] %>% lm(g_plas2 ~ g_plas1,data=.)
lm1 <- lm(g_plas2 ~ g_plas1,data=Dataset[2:8,])
summary(lm1)
times <- Dataset[2:8,]
plot(g_plas2,g_plas2,data=times)
with(data,plot(g_plas2,g_plas2))
plot(times$g_plas2,times$g_plas1))
plot(times$g_plas2,times$g_plas1)
domain <- seq(0,1,by=0.1)
domain
?predict
predict(lm1,interval='prediction')
fit
fits <- predict(lm1,interval='confidence')
lines(fits$fit)
df <- predict(lm1,domain,interval='confidence')
df <- predict(lm1,domain)
library(ggplot2)
ggplot(times,aes(g_plas2,g_plas1))+geom_point()
ggplot(times,aes(g_plas2,g_plas1))+geom_point()+geom_smooth(method='lm',se=TRUE)
ggplot(times,aes(g_plas2,g_plas1))+geom_point()+geom_smooth(method='lm',se=TRUE)+ylab('Plasma mass after 1 minute')+xlab('Extra plasma (<5 minutes')
ggplot(times,aes(g_plas2,g_plas1))+geom_point()+geom_smooth(method='lm',se=TRUE)+ylab('Plasma mass after 1 minute')+xlab('Extra plasma (<5 minutes)')+ggsave('flowdown_analysis.png')
summary(lm1)
library(stringr);library(babynames);library(ggplot2);library(dplyr);library(magrittr)
babynames$name %<>% as.factor()
person = C('Chelsea','Clifton')
person = c('Chelsea','Clifton')
subset(babynames,name==person) %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point(size=2)+
ylab('Percent of US babies')+
xlim(1880,2015)+
ggtitle(person)+
theme_light()+
ggsave(person %>% paste('C:/Users/cdhig/Desktop/Rshrapnel/babynames/',.) %>% paste(.,'.png'))
subset(babynames,name==person)# %>%
subset(babynames,name==person) %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point(size=2)+
ylab('Percent of US babies')+
xlim(1880,2015)+
ggtitle(person)+
theme_light()
subset(babynames,name==person) %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point(size=2)+
ylab('Percent of US babies')+
xlim(1880,2015)+
ggtitle(person)+
theme_light()+
facet_grid(scales='free_y')
subset(babynames,name==person) %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point(size=2)+
ylab('Percent of US babies')+
xlim(1880,2015)+
ggtitle(person)+
theme_light()+
facet_grid(.~name,scales='free_y')
subset(babynames,name==person) %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point(size=2)+
ylab('Percent of US babies')+
xlim(1880,2015)+
ggtitle(person)+
theme_light()+
facet_grid(name~.,scales='free_y')
subset(babynames,name==person) %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point(size=2)+
ylab('Percent of US babies')+
xlim(1880,2015)+
ggtitle('Name popularity)+
theme_light()+
facet_grid(name~.,scales='free_y')
ggsave(person %>% paste('C:/Users/cdhig/Desktop/Rshrapnel/babynames/',.) %>% paste(.,'.png'))
# finding fraction of total childen born with names ending in n
totalchildren <- aggregate(n ~ year + sex,babynames,sum)
index1 <- with(babynames,grepl("*n$",name))
Nbabies <- babynames[index1,]
totalNchildren <- Nbabies %>% aggregate(n ~ year + sex,.,sum)
ggplot(totalNchildren,aes(year,n*1e-5,color=sex))+geom_point()+ylab('Billions of babies')+
ggtitle('Number of children born with names ending in -n')
ggsave('#n names.png')
# get list of least common names
least <- babynames[babynames$prop < 0.001,]
least %T>% str %T>% write.csv('C:/Users/cdhig/Desktop/Rshrapnel/babynames/0.0001%.csv')
# total names used ending in n
totalnames <- babynames %>% count(.,'name') %>% select(freq) %>% sum()
N_names <- Nbabies %>% count(.,'name') %>% select(freq) %>% sum()
#
totalnames <- table(babynames$year)
Nnames <- table(Nbabies$year)
plot(Nnames/totalnames*100,main='Proportion of names ending in -n',ylab = 'Percent',xlab='Year')
subset(babynames,name==person) %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point(size=2)+
ylab('Percent of US babies')+
xlim(1880,2015)+
ggtitle('Name popularity')+
theme_light()+
facet_grid(name~.,scales='free_y')
person = c('Chelsea','Clifton')
subset(babynames,name==person) %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point(size=2)+
ylab('Percent of US babies')+
xlim(1880,2015)+
ggtitle('Name popularity')+
theme_light()+
facet_grid(name~.,scales='free_y')
subset(babynames,name==person) %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point(size=2)+
ylab('Percent of US babies')+
xlim(1880,2015)+
ggtitle('Name popularity from SSA')+
theme_light()+
facet_grid(name~.,scales='free_y')
library("Rcmdr", lib.loc="~/R/win-library/3.4")
str(HCTs)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2);library(dplyr);library(xlsx)
setwd('J:/groups/bloodfilter/CliftonAnderson')
wafers <- read.xlsx('wafers.xlsx',colClasses = NA,sheetIndex=2)
wafers$Ruffle <- as.factor(wafers$Ruffle)
wafers$Depth  <- as.factor(wafers$Depth)
wafers$Replicate  <- as.factor(wafers$Replicate)
with(wafers,{table(Treatment,Finish,Liquid)})
ggplot(wafers,aes(Depth,Angle,shape=Ruffle,color=Treatment))+
geom_jitter(width=0.25)+
facet_grid(Liquid ~ Finish*Treatment)
wafers %>% subset(.,Finish=='glossy'&Liquid=='water')
wafers %>% subset(.,Finish=='glossy'&Liquid=='water'&Ruffle!=0)
wafers %>% subset(.,Finish=='glossy'&Liquid=='water'&Ruffle!=0) %>% t.test(wafers[wafers$Depth])
ggplot(wafers,aes(Depth,Angle,shape=as.factor(Ruffle),color=Treatment))+
geom_jitter(width=0.25)+
facet_grid(Liquid ~ Finish*Treatment)
wafers <- read.xlsx('wafers.xlsx',colClasses = NA,sheetIndex=2)
with(wafers,{PeakDist <- 2*Depth})
wafers
with(wafers,{wafers$PeakDist <- 2*Depth})
wafers
wafers$PeakDist <- 2*wafers$Depth*tan(wafers$Angle*3.1415/180)*0.1*2.54
wafers
wafers$PeakDist <- 2*wafers$Depth*tan(wafers$Ruffle*3.1415/180)*0.1*2.54
wafers
wafers$PeakDist <- 2*wafers$Depth*tan(wafers$Ruffle*3.1415/180)*0.1*25.4
ggplot(wafers,aes(PeakDist,Angle,shape=as.factor(Ruffle),color=Treatment))+
geom_jitter(width=0.25)+
facet_grid(Liquid ~ Finish*Treatment)
table(wafers$PeakDist)
ggplot(wafers,aes(PeakDist,Angle,shape=as.factor(Ruffle),color=Treatment))+
geom_jitter(width=0.15)+
facet_grid(Liquid ~ Finish*Treatment)
ggplot(wafers,aes(PeakDist,Angle,shape=as.factor(Ruffle),color=Treatment))+
geom_jitter(width=0.0)+
facet_grid(Liquid ~ Finish*Treatment)
wafers$PeakDist <- 2*wafers$Depth*tan(wafers$Ruffle*3.1415/180)*0.1*25.4
wafers$TroughArea <- 0.5*wafers$PeakDist*wafers$Depth
ggplot(wafers,aes(TroughArea,Angle,shape=as.factor(Ruffle),color=Treatment))+
geom_jitter(width=0.0)+
facet_grid(Liquid ~ Finish*Treatment)
ggplot(wafers,aes(TroughArea,Angle,shape=as.factor(Ruffle),color=as.factor(Depth)))+
geom_jitter(width=0.0)+
facet_grid(Liquid ~ Finish*Treatment)
wafers$PeakDist <- 2*wafers$Depth*tan(wafers$Ruffle*3.1415/180)*0.1*25.4
wafers$TroughArea <- wafers$PeakDist*wafers$Depth ## base times height. 1/2 and 2x cancel out
ggplot(wafers,aes(TroughArea,Angle,shape=as.factor(Ruffle),color=as.factor(Depth)))+
geom_jitter(width=0.0)+
facet_grid(Liquid ~ Finish*Treatment)
subset(babynames,name=='Truman') %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point()+
ylab('Percent of US population')+
theme_bw()
subset(babynames,name=='Frodo') %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point()+
ylab('Percent of US population')+
theme_bw()
subset(babynames,name=='Bossu') %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point()+
ylab('Percent of US population')+
theme_bw()
subset(babynames,name=='Esmeralda') %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point()+
ylab('Percent of US population')+
theme_bw()
subset(babynames,name=='Esmerelda') %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point()+
ylab('Percent of US population')+
theme_bw()
subset(babynames,name=='Esmeralda') %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point()+
ylab('Percent of US population')+
theme_bw()
subset(babynames,name=='Truman') %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point()+
ylab('Percent of US population')+
theme_bw()
subset(babynames,name=='Truman') %>%
ggplot(.,aes(year,prop*100,color=sex))+
geom_point()+
ylab('Percent of US infants')+
theme_bw()
ggplot(dynamic,aes(Time,avg,color=Liquid,shape=Replicate))+
geom_line()+
geom_point()+
facet_grid(Treatment~Finish)
library(ggplot2);library(dplyr);library(xlsx);library(ggpubr);library(car);library(forcats);library(magrittr)
setwd('C:/Users/cdhig/Pictures/PowerCam')
raw <- read.xlsx2('Results.xlsx',sheetIndex=1,colClasses = NA)
setwd("C:/Users/cdhig/Documents/Pitt/Thesis")
with(raw,{
raw$uL <- as.factor(raw$uL)
raw$Location <- as.factor(raw$Location)
raw$Date <- as.factor(raw$Date)
})
dynamic <- raw[raw$Time!='SS',]
dynamic$Time <- as.numeric(as.character(dynamic$Time))
dynamic$Replicate %<>% as.factor
ggplot(dynamic,aes(Time,avg,color=Liquid,shape=Replicate))+
geom_line()+
geom_point()+
facet_grid(Treatment~Finish)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2);library(dplyr);library(xlsx)
setwd('J:/groups/bloodfilter/CliftonAnderson')
wafers <- read.xlsx('wafers.xlsx',colClasses = NA,sheetIndex=2)
wafers$Replicate  <- as.factor(wafers$Replicate)
with(wafers,{table(Treatment,Finish,Liquid)})
wafers$PeakDist <- 2*wafers$Depth*tan(wafers$Ruffle*3.1415/180)*0.1*25.4
wafers$TroughArea <- wafers$PeakDist*wafers$Depth
ggplot(wafers,aes(TroughArea,Angle,shape=as.factor(Ruffle),color=as.factor(Depth)))+
geom_jitter(width=0.0)+
facet_grid(Liquid ~ Finish*Treatment)
ggplot(wafers,aes(as.factor(Depth),Angle,shape=as.factor(Ruffle),color=Treatment))+
geom_jitter(width=0.25)+
facet_grid(Liquid ~ Finish*Treatment)
ggplot(wafers,aes(as.factor(Depth),Angle,shape=as.factor(Ruffle),color=Liquid))+
geom_jitter(width=0.25)+
facet_grid(Finish ~ Treatment)
ggplot(wafers,aes(as.factor(Depth),Angle,shape=as.factor(Ruffle),color=Liquid))+
geom_jitter(width=0.15)+
facet_grid(Finish ~ Treatment)
