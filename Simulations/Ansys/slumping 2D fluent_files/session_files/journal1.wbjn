# encoding: utf-8
# Release 18.1
SetScriptVersion(Version="18.1.463")
template1 = GetTemplate(TemplateName="Fluid Flow")
system1 = GetSystem(Name="Study")
system2 = template1.CreateSystem(
    Position="Right",
    RelativeTo=system1)
geometry1 = system2.GetContainer(ComponentName="Geometry")
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
meshComponent1 = system2.GetComponent(Name="Mesh")
meshComponent1.Refresh()
geometry1.Edit(IsSpaceClaimGeometry=True)
geometry1.Exit()
with Transaction():
    meshComponent1.Refresh()
    mesh1 = system2.GetContainer(ComponentName="Mesh")
    mesh1.Edit()
mesh1.Exit()
with Transaction():
    setupComponent1 = system2.GetComponent(Name="Setup")
    setupComponent1.Refresh()
    setup1 = system2.GetContainer(ComponentName="Setup")
    fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
    fluentLauncherSettings1.SetEntityProperties(Properties=Set(Precision="Double", EnvPath={}))
    setup1.Edit()
with Transaction():
    fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
    setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-toggle-button2 "General*Table1*Table2(Solver)*ToggleBox6(2D Space)*Axisymmetric" #t)(cx-gui-do cx-activate-item "General*Table1*Table2(Solver)*ToggleBox6(2D Space)*Axisymmetric")(cx-gui-do cx-set-toggle-button2 "General*Table1*Table2(Solver)*ToggleBox5(Time)*Transient" #t)(cx-gui-do cx-activate-item "General*Table1*Table2(Solver)*ToggleBox5(Time)*Transient")(cx-gui-do cx-set-toggle-button2 "General*Table1*Table3*CheckButton1(Gravity)" #t)(cx-gui-do cx-activate-item "General*Table1*Table3*CheckButton1(Gravity)")')
with Transaction():
    setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
    Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "General*Table1*Table2(Solver)*ToggleBox6(2D Space)*Planar" #t)(cx-gui-do cx-activate-item "General*Table1*Table2(Solver)*ToggleBox6(2D Space)*Planar")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table3(Mesh)*PushButton4(Check)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"General*Table1*Table3*Frame4*Frame1(Gravitational Acceleration)*RealEntry2(Y)\" '( -9.81))(cx-gui-do cx-activate-item \"General*Table1*Table3*Frame4*Frame1(Gravitational Acceleration)*RealEntry2(Y)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*Table3*PushButton2(Units)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 2))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*Frame3*List1(Units)\" '( 2))(cx-gui-do cx-activate-item \"Set Units*Frame3*List1(Units)\")(cx-gui-do cx-set-list-selections \"Set Units*Frame3*List1(Units)\" '( 0))(cx-gui-do cx-activate-item \"Set Units*Frame3*List1(Units)\")(cx-gui-do cx-activate-item \"Set Units*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton5(Report Quality)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"General*Table1*Table3*Frame4*Frame1(Gravitational Acceleration)*RealEntry2(Y)\" '( -10))(cx-gui-do cx-activate-item \"General*Table1*Table3*Frame4*Frame1(Gravitational Acceleration)*RealEntry2(Y)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"General*Table1*Table3*Frame4*Frame1(Gravitational Acceleration)*RealEntry1(X)\" '( -6000))(cx-gui-do cx-activate-item \"General*Table1*Table3*Frame4*Frame1(Gravitational Acceleration)*RealEntry1(X)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"General*Table1*Table3*Frame4*Frame1(Gravitational Acceleration)*RealEntry1(X)\" '( 6000))(cx-gui-do cx-activate-item \"General*Table1*Table3*Frame4*Frame1(Gravitational Acceleration)*RealEntry1(X)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Multiphase Model*Table1*ToggleBox1(Model)*Volume of Fluid" #t)(cx-gui-do cx-activate-item "Multiphase Model*Table1*ToggleBox1(Model)*Volume of Fluid")(cx-gui-do cx-set-toggle-button2 "Multiphase Model*Table1*Table10(Options)*Table1(Interface Modeling)*ToggleBox1(Type)*Dispersed" #t)(cx-gui-do cx-activate-item "Multiphase Model*Table1*Table10(Options)*Table1(Interface Modeling)*ToggleBox1(Type)*Dispersed")(cx-gui-do cx-set-toggle-button2 "Multiphase Model*Table1*Table10(Options)*Table1(Interface Modeling)*ToggleBox1(Type)*Sharp" #t)(cx-gui-do cx-activate-item "Multiphase Model*Table1*Table10(Options)*Table1(Interface Modeling)*ToggleBox1(Type)*Sharp")(cx-gui-do cx-set-toggle-button2 "Multiphase Model*Table1*Table10(Options)*Table1(Interface Modeling)*ToggleBox1(Type)*Sharp/Dispersed" #t)(cx-gui-do cx-activate-item "Multiphase Model*Table1*Table10(Options)*Table1(Interface Modeling)*ToggleBox1(Type)*Sharp/Dispersed")(cx-gui-do cx-set-toggle-button2 "Multiphase Model*Table1*Table10(Options)*Table1(Interface Modeling)*ToggleBox1(Type)*Dispersed" #t)(cx-gui-do cx-activate-item "Multiphase Model*Table1*Table10(Options)*Table1(Interface Modeling)*ToggleBox1(Type)*Dispersed")(cx-gui-do cx-activate-item "Multiphase Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Volume of Fluid)|Phases|phase-1 - Primary Phase"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Volume of Fluid)|Phases|phase-1 - Primary Phase"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Volume of Fluid)|Phases|phase-1 - Primary Phase"))(cx-gui-do cx-set-text-entry "Primary Phase*TextEntry1(Name)" "plasma")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Primary Phase*Table2*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Edit Material*RealEntry10\" '( 1.024))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Material*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Edit Material*RealEntry10\" '( 1024))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Material*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Material*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Primary Phase*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Volume of Fluid)|Phases|phase-1 - Primary Phase"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Volume of Fluid)|Phases|phase-1 - Primary Phase"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Volume of Fluid)|Phases|phase-1 - Primary Phase"))(cx-gui-do cx-set-text-entry "Primary Phase*TextEntry1(Name)" "plasma")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Primary Phase*TextEntry1(Name)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Primary Phase*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Volume of Fluid)|Phases|plasma - Primary Phase"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Volume of Fluid)|Phases|plasma - Primary Phase"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Volume of Fluid)|Phases|plasma - Primary Phase"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Primary Phase*Table2*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Edit Material*RealEntry16\" '( 0.0026))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Material*PanelButtons*PushButton3(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Edit Material*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Primary Phase*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Volume of Fluid)|Phases|phase-2 - Secondary Phase"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Volume of Fluid)|Phases|phase-2 - Secondary Phase"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Volume of Fluid)|Phases|phase-2 - Secondary Phase"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Multiphase (Volume of Fluid)|Phases|phase-2 - Secondary Phase"))(cx-gui-do cx-activate-item "Secondary Phase*PanelButtons*PushButton1(OK)")')
with Transaction():
    Save(Overwrite=True)
    setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Save Project")')
    setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
