xlab('Excess Volume (mL)')+
geom_line(data=RBCTrough.lm,aes(Vol_RBC2Trough,.fitted))+
theme(axis.text.x = element_text(angle=45,hjust=1),legend.position = c(0.85, 0.2))
library("Rcmdr", lib.loc="~/R/win-library/3.4")
View(dat)
library("Rcmdr", lib.loc="~/R/win-library/3.4")
fouling <- readXL("C:/Users/cdhig/Desktop/fouling_axample.xlsx",
rownames=FALSE, header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
detach("package:Rcmdr", unload=TRUE)
library("Rcmdr", lib.loc="~/R/win-library/3.4")
ST<- readXL("C:/Users/cdhig/Desktop/fouling_axample.xlsx",
rownames=FALSE, header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
scatter3d(Fouling.m2K.W.~P.psig.+V.gpm., data=ST, surface=FALSE, residuals=TRUE, bg="white", axis.scales=TRUE, grid=TRUE, ellipsoid=FALSE)
ST <- readXL("C:/Users/cdhig/Desktop/S&Tdata.xlsx", rownames=FALSE,
header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
scatter3d(Fouling.m2K.W.~P.psig.+V.gpm., data=ST, surface=FALSE, residuals=TRUE, bg="white", axis.scales=TRUE, grid=TRUE, ellipsoid=FALSE)
ST <- readXL("C:/Users/cdhig/Desktop/S&Tdata.xlsx", rownames=FALSE,
header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
scatter3d(Fouling.m2K.W.~P.psig.+V.gpm., data=ST, surface=FALSE, residuals=TRUE, bg="white", axis.scales=TRUE, grid=TRUE, ellipsoid=FALSE)
scatter(ST)
plot(ST)
table(ST)
table(ST$V.gpm.)
ff <- lm(Fouling.m2k.W ~ P.psig + V.gpm,data=ST)
ST$Fouling.m2K.W.
ST <- readXL("C:/Users/cdhig/Desktop/S&Tdata.xlsx", rownames=FALSE,
header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
scatter3d(Fouling.m2K.W.~P.psig.+V.gpm., data=ST, surface=FALSE, residuals=TRUE, bg="white", axis.scales=TRUE, grid=TRUE, ellipsoid=FALSE)
plot(ST)
ST$P
plot(ST)
ff <- lm(Fouling.m2k.W. ~ P.psig + V.gpm,data=ST)
ff <- lm(Fouling ~ P + V,data=ST)
summary(ff)
plot(ff.residuals)
plot(ff$residuals)
qqline(ff$residuals)
qplot(ff$residuals)
qqplot(ff$residuals)
QQplot(ff$residuals)
help(qqplot)
qqnorm(ff$residuals)
qqnorm(ff$residuals)
library(ggplot2)
ggplot(ff$residuals,aes(V,P,size=FF))+geom_point()
str(ST)
ggplot(ST,aes(V,P,size=FF))+geom_point()
ggplot(ST,aes(V,P,size=Fouling))+geom_point()
ggplot(ST,aes(V,P,size=Fouling,alpha=0.5))+geom_point()
ggplot(ST,aes(V,P,size=Fouling))+geom_point(aes(alpha=0.5))
ggplot(ST,aes(V,P,color=Fouling))
ggplot(ST,aes(V,P,color=Fouling))+geom_point()
ggplot(ST,aes(V,Fouling,color=as.factor(P)))+geom_point()
ggplot(ST,aes(V,Fouling,color=P))+geom_point()
ST$Fouling/mean(ST$Fouling)
plot(ST$Fouling/mean(ST$Fouling)-1)
qqnorm(ST$Fouling/mean(ST$Fouling)-1)
plot(ST$Fouling/mean(ST$Fouling)-1)
plot(ST$V,ST$Fouling/mean(ST$Fouling)-1)
detach("package:Rcmdr", unload=TRUE)
library("Rcmdr", lib.loc="~/R/win-library/3.4")
scatter3d(Fouling~P+V, data=ST, surface=TRUE, residuals="squares",
bg="white", axis.scales=TRUE, grid=TRUE, ellipsoid=FALSE)
print(1)
function cat(val){
print(val)
}
scatter3d(Fouling~P+V, data=ST, surface=TRUE, residuals="squares",
bg="white", axis.scales=TRUE, grid=TRUE, ellipsoid=FALSE,point.col=V)
ggplot(ST,aes(V,Fouling,color=P))+geom_point()
ggplot(ST,aes(P,Fouling,color=P))+geom_point()
detach("package:Rcmdr", unload=TRUE)
library("Rcmdr", lib.loc="~/R/win-library/3.4")
ST <- readXL("C:/Users/cdhig/Desktop/S&Tdata.xlsx", rownames=FALSE,
header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
with(ST,{Vf<-as.factor(Vf),
Pf<-as.factor(Pf)})
with(ST,(Vf<-as.factor(Vf),
Pf<-as.factor(Pf)))
ST$Vf<-as.factor(ST$Vf)
ST$Pf<-as.factor(ST$Pf)
with(ST, plotMeans(Fouling~ Vf+Pf, error.bars="conf.int", level=0.95,
connect=TRUE))
ggplot(ST,aes(Vf,Fouling,color=Pf))+geom_point()
ggplot(ST,aes(Vf,Fouling,color=Pf))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin=len-se,ymax=len+se))
ggplot(ST,aes(Vf,Fouling,color=Pf))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin=Fouling-se,ymax=Fouling+se))
STsum <- summarySE(ST,measurevar='Fouling',
groupvars=c('Pf','Vf'))
library(dplyr)
STsum <- group_by(c('Pf','Vf'))
STsum <- group_by(Pf,Vf)
STsum <- ST %>% group_by(Pf,Vf)
qt?
;dlkfj
help(qt)
qt(0.05,100)
qt(0.95,100)
qt(0.975,100)
help("TDist")
STsum <- ST %>% group_by(Pf,Vf) %>%
summarize(n=n(),
Fouling=mean(Fouling),
SE = sd(Fouling)/sqrt(n),
CI = qt(0.975,n-1)*SE)
STsum
STsum <- ST %>% group_by(Pf,Vf) %>%
summarize(n=n(),
Fouling=mean(Fouling*10000),
SE = sd(Fouling),
CI = qt(0.975,n-1)*SE)
STsum
sd(ST$Fouling)
STsum <- ST %>% group_by(Pf,Vf) %>%
summarize(n=n(),
FF =mean(Fouling*10000),
SE = sd(FF),
CI = qt(0.975,n-1)*SE)
STsum
STsum <- ST %>% group_by(Pf,Vf) %>%
summarize(n=n(),
FF = mean(Fouling*10000),
SE = sd(Fouling*10000),
CI = qt(0.975,n-1)*SE)
STsum
ggplot(STsum,aes(Vf,FF,color=Pf))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin=Fouling-se,ymax=Fouling+se))
ggplot(STsum,aes(Vf,FF,color=Pf))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin=FF-se,ymax=FF+se))
ggplot(STsum,aes(Vf,FF,color=Pf))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin=FF-SE,ymax=FF+SE))
ggplot(STsum,aes(Pf,FF,color=Vf))+
geom_point()+
geom_line()+
geom_errorbar(aes(ymin=FF-SE,ymax=FF+SE))
ggplot(STsum,aes(Vf,FF,color=Pf))+
geom_point()+
geom_line(aes(Vf,FF))+
geom_errorbar(aes(ymin=FF-SE,ymax=FF+SE))
ggplot(STsum,aes(Vf,FF,color=Pf))+
geom_point()+
geom_line(aes(Vf,FF))+
geom_errorbar(aes(ymin=FF-SE,ymax=FF+SE))+
theme_bw()
library("scatterplot3d", lib.loc="~/R/win-library/3.4")
scatterplot3d(x=Vf,y=Pf,z=Fouling)
scatterplot3d(x=Vf,y=Pf,z=Fouling,data=ST)
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling))
)
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling,pch=Vf)))
ST$Vf<-as.numeric(ST$Vf)
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling,pch=Vf)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling,color=Vf)))
table(ST$Vf)
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling,color=Vf,
box=FALSE)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling,color=Vf,
grid=FALSE)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,color=Vf,
grid=FALSE)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,color=Vf,
box=FALSE)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=90)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=10)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=-10)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=45)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=50)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=40)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=20)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=180)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=0)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=180)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=90)))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=45)))
xlab='Flow rate (gpm)',
ylab='Steam pressure (psig)',
zlab='Fouling factor (m2 K/W)'))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=45,
xlab='Flow rate (gpm)',
ylab='Steam pressure (psig)',
zlab='Fouling factor (m2 K/W)'))
)
STsum
STsum%>% write.csv('Desktop/STsum.csv', na="")
STsum%>% write.csv('Desktop\STsum.csv', na="")
STsum%>% write.csv(path='Desktop\STsum.csv', na="")
STsum%>% write.csv(STsum, 'Desktop/STsum.csv')
STsum%>% write.csv(STsum, 'STsum.csv')
lirary(tidyr)
library(tidyr)
STsum%>% write.csv(STsum, 'STsum.csv')
STsum%>% write_csv(STsum, 'STsum.csv')
library(tidyverse)
STsum%>% write_csv(STsum, 'STsum.csv')
STsum%>% write_csv(STsum, path='Desktop/STsum.csv')
STsum%>% write_csv(STsum, path="Desktop/STsum.csv")
STsum%>% write_csv(STsum, path="Desktop")
STsum%>% write_csv(STsum, path = "Desktop/surveys_complete.csv")
STsum%>% write_csv(STsum, path = "Desktop/fouling_summary.csv")
ST <- readXL("C:/Users/cdhig/Desktop/S&Tdata.xlsx", rownames=FALSE,
header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
library("Rcmdr", lib.loc="~/R/win-library/3.4")
ST <- readXL("C:/Users/cdhig/Desktop/S&Tdata.xlsx", rownames=FALSE,
header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
library(scatterplot3d)
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=Vf,
pch=16,
box=FALSE,
angle=45,
xlab='Flow rate (gpm)',
ylab='Steam pressure (psig)',
zlab='Fouling factor (m2 K / W)')))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=as.factor(Vf),
pch=16,
box=FALSE,
angle=45,
xlab='Flow rate (gpm)',
ylab='Steam pressure (psig)',
zlab='Fouling factor (m2 K / W)')))
ST <- readXL("C:/Users/cdhig/Desktop/S&Tdata.xlsx", rownames=FALSE,
header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
STsum <- ST %>% group_by(Pf,Vf) %>%
summarize(n=n(),
FF = mean(Fouling*10000),
SE = sd(Fouling*10000),
CI = qt(0.975,n-1)*SE)
install.packages('scatterplot3d')
install.packages('dplyr')
ST <- xlsx.read("C:/Users/cdhig/Desktop/S&Tdata.xlsx", rownames=FALSE,
header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
ST <- read.xlsx("C:/Users/cdhig/Desktop/S&Tdata.xlsx", rownames=FALSE,
header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
library(xlsx)
ST <- read.xlsx("C:/Users/cdhig/Desktop/S&Tdata.xlsx", rownames=FALSE,
header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
str(ST)
STsum <- ST %>% group_by(Pf,Vf) %>%
summarize(n=n(),
FF = mean(Fouling*10000),
SE = sd(Fouling*10000),
CI = qt(0.975,n-1)*SE)
library(scatterplot3d)
library(dplyr)
library(xlsx)
ST <- read.xlsx("C:/Users/cdhig/Desktop/S&Tdata.xlsx", rownames=FALSE,
header=TRUE, na="", sheet="Sheet1", stringsAsFactors=TRUE)
str(ST)
STsum <- ST %>% group_by(Pf,Vf) %>%
summarize(n=n(),
FF = mean(Fouling*10000),
SE = sd(Fouling*10000),
CI = qt(0.975,n-1)*SE)
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=as.factor(Vf),
pch=16,
box=FALSE,
angle=45,
xlab='Flow rate (gpm)',
ylab='Steam pressure (psig)',
zlab='Fouling factor (m2 K / W)')))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=as.factor(Vf),
pch=16,
box=FALSE,
angle=45,
xlab='Flow rate (gpm)',
ylab='Steam pressure (psig)',
zlab='Fouling factor (m2 K / W)')))
with(ST,(scatterplot3d(x=Vf,y=Pf,z=Fouling*10000,
color=as.numeric(as.factor(Vf)),
pch=16,
box=FALSE,
angle=45,
xlab='Flow rate (gpm)',
ylab='Steam pressure (psig)',
zlab='Fouling factor (m2 K / W)')))
library(sleuth3)
library(Sleuth3)
attach(Sleuth3::case0201)
case0201
str(case0201)
wilcox.test?
()
help("wilcox.test")
wilcox.test(Depth~Year,data-case0201)
wilcox.test(Depth~Year,data=case0201)
wilcox.test(Depth~Year,data=case0201,correct=FALSE)
wilcox.test(Depth~Year,data=case0201,correct=FALSE,exact=FALSE)
Sleuth3::ex0221
detach()
attach(ex0221)
exo221
ex0221
wilcox.test(Humerus~Status,data=ex0221)
wilcox.test(Humerus~Status,data=ex0221,exact=FALSE)
wilcox.test(Humerus~Status,data=ex0221,exact=FALSE,correct=FALSE)
detach(ex0221)
attach(Sleuth3::ex0211)
ex0211
plot(Lifetime~Group,data=ex0211)
Sleuth3::case0202
detach(ex0211)
attach(Sleuth3::case0202)
case0202
library(plyr)
library(dplyr)
case0202 %>% gather('Unaffected','Affected',key='Schiz',value='Brain.Size')
library(tidyr)
case0202 %>% gather('Unaffected','Affected',key='Schiz',value='Brain.Size')
wilcox.test(Unaffected,Affected,paired=TRUE)
wilcox.test(log(Unaffected),log(Affected),paired=TRUE)
detach(case0202)
case0201
Sleuth3::ex0413
Sleuth3::ex0431
wilcox.test(Survival~Group,data=Sleuth3::ex0431)
plot(log(Survival),Group,data=ex0431)
ex0431
ex0431$Survival
plot(Survival,Group,data=ex0431)
plot(Survival,Group,data=ex0431)
plot(ex0431$Survival,Group,data=ex0431)
plot(ex0431$Survival,ex0431$Group,data=ex0431)
library(ggplot2)
ggplot(ex0431,aes(x=Group,y=Survival))+geom_boxplot()
ggplot(ex0431,aes(x=Group,y=Survival))+geom_boxplot()+geom_jitter()
ggplot(ex0431,aes(x=Group,y=Survival))+geom_boxplot()+geom_jitter(width=0.15)
ggplot(ex0431,aes(x=Group,y=log(Survival)))+geom_boxplot()
ggplot(ex0431,aes(x=Group,y=log(Survival)))+geom_boxplot()+geom_jitter(width=0.1)
qqplot(Survival,Group,data=ex0431)
qqplot(ex0431$Survival,ex0431$Group)
qqplot(ex0431$Survival)
ggplot(ex0431,aes(x=Group,y=log(Survival)))+geom_boxplot()+geom_jitter(width=0.1)
knitr::opts_chunk$set(echo = TRUE)
library(latex2exp)
library(xlsx)
library(ggplot2)
library(dplyr)
library(magrittr)
library(forcats)
library(broom)
library(tidyr)
spins <- read.xlsx2("J:/groups/bloodfilter/CliftonAnderson/Spinning.xlsx",sheetIndex = 2,colClasses=NA)
spins <- read.xlsx2("C:/Users/cdhig/Documents/MS-Thesis-Pitt/Data-analysis/Spinning.xlsx",sheetIndex = 2,colClasses=NA)
str(spins)
spins <- read.xlsx2("C:/Users/cdhig/Documents/MS-Thesis-Pitt/Data-analysis/Spinning.xlsx",sheetIndex = 2,colClasses=NA)
spins$HCT_plas[1] <- NaN
spins$g_trough[1] <- NaN
spins$g_wiped[1] <- NaN
spins$Baffles  <- grepl('16b',spins$Disk)
spins$Glossy   <- grepl('glossy',spins$Disk)
spins$VolWB  <- 7.0 + (spins$Trough.Volume-4)*(7.0/8.5) %>% round(.,2)
spins$VolPBS <- 1.5 + (spins$Trough.Volume-4)*(1.5/8.5) %>% round(.,2)
#spins$Trough.Volume <- as.factor(spins$Trough.Volume)
table(spins$Disk,!is.na(spins$HCT))
spins <- read.xlsx2("C:/Users/cdhig/Documents/MS-Thesis-Pitt/Data-analysis/Spinning.xlsx",sheetIndex = 2,colClasses=NA)
spins$HCT_plas[1] <- NaN
spins$g_trough[1] <- NaN
spins$g_wiped[1] <- NaN
spins$Baffles  <- grepl('16b',spins$Disk)
spins$Glossy   <- grepl('glossy',spins$Disk)
spins$VolWB  <- 7.0 + (spins$Trough.Volume-4)*(7.0/8.5) %>% round(.,2)
spins$VolPBS <- 1.5 + (spins$Trough.Volume-4)*(1.5/8.5) %>% round(.,2)
#spins$Trough.Volume <- as.factor(spins$Trough.Volume)
table(spins$Disk,!is.na(spins$HCT))
Temp = 23 #C
rho_PBS <- -5.2037e-6*Temp^2 - 8.1463e-6*Temp + 1.0097
# I got this correlation from
# (http://www.sciencedirect.com/science/article/pii/S003991400400373X)
spins$VolFracPlasma  <- with(spins,{VolWB*(1-HCT)/(VolWB*(1-HCT) + VolPBS)})
spins$RhoSolution    <- with(spins,{(rho_PBS*VolPBS + 1.024*(1-HCT)*VolWB)/(VolPBS + (1-HCT)*VolWB)})
spins$VFlowdown      <- with(spins,{gplas_tot/(RhoSolution*(1-HCT_plas)+1.093*HCT_plas)})
spins[is.na(spins$HCT_plas),]$VFlowdown <- spins[is.na(spins$HCT_plas),]$gplas_tot/1.024
# Some disks have missing HCT_plasma values. For these disks, I approximate the density of the
# flowdown as that of pure plasma. This lets me keep these data with little introduced error.
spins$RBCRecovery    <- with(spins,{VFlowdown*VolFracPlasma*HCT_plas/(VolWB*HCT)*100})
spins$PlasmaRecovery <- with(spins,{VFlowdown*(1-HCT_plas)/(VolPBS+VolWB*(1-HCT))*100})
ggplot(spins,aes(Disk,PlasmaRecovery,color=Glossy))+
geom_jitter(width=0.05,na.rm=TRUE)+
theme(axis.text.x = element_text(angle=45,hjust=1))+
ggtitle('Plasma recovery (%)')
#  aes(x = fct_reorder(Disk,PlasmaRecovery,.desc=TRUE))
ggplot(spins,aes(Disk,RBCRecovery,color=Glossy))+
geom_jitter(width=0.05,na.rm=TRUE)+
theme(axis.text.x = element_text(angle=45,hjust=1))+
ggtitle('RBC recovery (%)')
ggplot(spins,aes(Disk,gplas_tot,shape=Glossy,color=HCT_plas))+
geom_jitter(width=0.05,na.rm=TRUE)+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggtitle('Total mass of flowdown')+
ylim(1.7,5)
spinsum <- spins %>% group_by(Disk) %>% summarise(n=n(), 'Flowdown (g)'=mean(gplas_tot), sd=sd(gplas_tot), se=sd/sqrt(n), ci = qt(0.95,n-1)*se)
knitr::kable(spinsum,caption='Mass of flowdown by disk')
RealVol <- function(x){
if (x==3){return(x*0.8)}
else if (x==4){return(x*0.9)}
else if (x==5){return(x*0.8)}
else {print('failed')}}
spins$Trough.Volume.real <- RealVol(spins$Trough.Volume)
spins$Vol_RBC2Trough <- with(spins,{((HCT*VolWB)/0.85-Trough.Volume)})
spins$HCT_Disk_calc <- with(spins,{(HCT*VolWB-HCT_plas*(VFlowdown))/Trough.Volume})
spins$Ordinate <- with(spins,{HCT*VolWB-HCT_plas*VFlowdown})
spins$Vol_Plasma2Trough <- with(spins,{VolWB*(1-HCT/0.8)-Trough.Volume})
glossy <- spins[grepl('glossy',spins$Disk),]
ruffles <- spins[grepl('16x3_glossy',spins$Disk),]
ggplot(ruffles,aes(Trough.Volume,Ordinate))+
geom_jitter(aes(color=Disk))+
geom_smooth(method='lm',se=TRUE)
ggplot(ruffles,aes(Vol_Plasma2Trough,PlasmaRecovery))+
geom_point(aes(color=HCT,shape=Disk))+
theme(axis.text.x = element_text(angle=45,hjust=1))
rufflesum <- ruffles %>% select(.,HCT_Disk_calc,HCT,Disk) %>% na.omit() %>% group_by(Disk) %>% summarise(n=n(),Hmin=min(HCT_Disk_calc),Hmean=mean(HCT_Disk_calc),Hmax=max(HCT_Disk_calc),SD=sd(HCT_Disk_calc),SE=SD/sqrt(n))
rufflesum
ggplot(ruffles,aes(HCT,HCT_Disk_calc,color=factor(ruffles$RBCRecovery>0.7),shape=Disk))+
geom_point()+
ylim(NA,1)
trough <- filter(ruffles,
RBCRecovery>0.7,
Disk %in% c('20.05_16x3_glossy_4mL',
'20.05_16x3_glossy_3mL',
'20.05_16x3_glossy_5mL'))
ggplot(trough,aes(RBCRecovery,Vol_RBC2Trough,color=Disk))+
geom_point(na.rm=TRUE)+
geom_smooth(method='lm',se=FALSE,na.rm=TRUE)
trough.lm <- lm(Vol_RBC2Trough ~ Disk/RBCRecovery-1,data=trough);summary(trough.lm)
trough.aov <- aov(Vol_RBC2Trough ~ Disk*RBCRecovery,data=trough);summary(trough.aov)
write.csv?
q
?write.csv
write.csv(spinsum,file='spinsum.csv')
get_cwd()
getwd()
setwd('C:\Users\cdhig\Documents')
setwd('C:/Users/cdhig/Documents')
getwd()
setwd('C:/Users/cdhig/Documents/MS-Thesis-Pitt/Data-analysis/')
getwd()
write.csv(spins,file='spinning.csv',row.names = F)
write.csv(spins,file='spinning.csv',row.names = F,na='')
write.csv(spins,file='spinning.csv',row.names = F,na='')
CollectionTime
write.csv(CollectionTime,file='collection_time.csv',row.names=F,na='')
save.image("~/MS-Thesis-Pitt/Data-analysis/blank_env.RData")
