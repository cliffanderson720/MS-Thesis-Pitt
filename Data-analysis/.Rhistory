best <- spins %>% filter(!is.na(PlasmaRecovery),Disk %in% c('20.05_16x3','20.05_8x3_1.25x7mm','16b')) %>% droplevels()
ggplot(best,aes(HCT,RBCRecovery,color=Disk))+geom_point()
best.lm <- lm(RBCRecovery~Disk*HCT,data=best %>% filter(RBCRecovery>0.5),contrasts = list(Disk='contr.sum'));summary(best.lm)
Anova(best.lm,type=3)
moat <- subset(spins,as.Date(Date)=='2019-4-16')
moataov <- lm(PlasmaRecovery~Disk+Donor,data=moat)
summary(moataov)
ggplot(moat,aes(Disk,VFlowdown,color=as.factor(HCT)))+geom_point()
ggplot(moat,aes(Disk,PlasmaRecovery,color=as.factor(HCT)))+geom_point()
ggplot(moat,aes(Disk,RBCRecovery,color=as.factor(HCT)))+geom_jitter(width=0.05)+ylab('Red cell recovery (%)')
ruffles8 <- spins %>% filter(as.Date(Date)==as.Date('2019-4-9')) %>%
dplyr::select(.,Disk,HCT,HCT_plas,PlasmaRecovery,VFlowdown)
ruffles8$Donor <- c(1,1,1,1,1,1,2,2,2,2,2)
short = c(7,3,4,7,8,4)
long = c(8,8,8,8,3,8)
donor = c(1,2,1,2,1,2,2,1,2,1,2,1)
HCT = c(0.48,0.40,0.48,0.40,0.48,0.40,0.40,0.48,0.40,0.48,0.40,0.48)
channels <- data.frame(Disk=gl(2,6,labels=c('8 normal','8 long')),
Breakthrough_points=c(short,long),
Donor=as.character(donor),
HCT = factor(HCT))
ggplot(channels,aes(Disk,Breakthrough_points,color=HCT))+
geom_jitter(width=0.1,height=0.,size=3)+
theme_minimal()
ruffsum <- ruffles8 %>% group_by(Disk,Donor) %>% summarise(n=n(),SD=sd(VFlowdown))
with(ruffsum,(n-1)*SD)
roundpool <- spins[as.Date(spins$Date)>='2019-04-16',] # these experiments most happened over two days.  Select just two
# look at contrasts - use helmert and drop extra disk factor levels
ggplot(roundpool,aes(Disk,PlasmaRecovery,color=as.Date(Date),shape=Donor))+geom_point()+theme(axis.text.x = element_text(angle = 45, hjust=1))
ggplot(roundpool,aes(Disk,bac_recovery,  color=as.Date(Date),shape=Donor))+geom_point()+theme(axis.text.x = element_text(angle = 45, hjust=1))
roundpool$Disk <- droplevels(roundpool$Disk)
contrasts(roundpool$Disk) <- 'contr.sum'
summary(lm(bac_recovery~Disk+Donor,data=roundpool))
rufdep <- spins %>% filter(Date=='2019-5-29') %>% dplyr::select(.,1:7,11,12,'RBCRecovery','PlasmaRecovery') # |Disk=='base_2mm_weir'
rufdep$Tube <- gl(6,2) #rep(1:6,each=2)
ggplot(rufdep,aes(HCT,PlasmaRecovery,color=Disk,shape=Tube))+geom_jitter(width=0.001)
ggplot(rufdep,aes(HCT,RBCRecovery,color=Disk,shape=Tube))+geom_jitter(width=0.001)
wilcox.test(PlasmaRecovery~Disk,paired=T,data=rufdep)
RealVol <- function(x){
if (x==3){return(x*0.8)}
else if (x==4){return(x*0.9)}
else if (x==5){return(x*0.8)}
else {print('failed')}}
spins$Trough.Volume.real <- RealVol(spins$Trough.Volume)
spins$Vol_RBC2Trough <- with(spins,{((HCT*VolWB)/0.85-Trough.Volume)})
spins$HCT_Disk_calc <- with(spins,{(HCT*VolWB-HCT_plas*(VFlowdown))/Trough.Volume})
spins$Ordinate <- with(spins,{HCT*VolWB-HCT_plas*VFlowdown})
spins$Vol_Plasma2Trough <- with(spins,{VolWB*(1-HCT/0.8)-Trough.Volume})
ruffles <- spins %>% filter(.,grepl('16x3',Disk)) %>% droplevels()
ggplot(ruffles,aes(Trough.Volume,Ordinate))+
geom_jitter(aes(color=Disk),width=0.05)+
geom_smooth(method='lm',se=TRUE)
ggplot(ruffles,aes(Vol_Plasma2Trough,PlasmaRecovery))+
geom_point(aes(color=HCT,shape=Disk))+
theme(axis.text.x = element_text(angle=45,hjust=1))
rufflesum <- ruffles %>%
dplyr::select(.,HCT_Disk_calc,HCT,Disk) %>%
na.omit() %>%
group_by(Disk) %>%
summarise(n=n(),
Hmin = min(HCT_Disk_calc),
Hmean = mean(HCT_Disk_calc),
Hmax = max(HCT_Disk_calc),
SD = sd(HCT_Disk_calc),
SE = SD/sqrt(n))
rufflesum
ggplot(ruffles,aes(HCT,HCT_Disk_calc,color=factor(ruffles$RBCRecovery>0.7),shape=Disk))+
geom_point()+
ylim(NA,1)
trough <- filter(ruffles,Disk != '20.05_16x3_peo')
baf4RR <- spins %>%
filter(HCT>0.41,Disk %in% c('base','16b','matte_20.05','matte_20.05_16b','matte_70.05','matte_70.05_16b')) %>%
filter(Disk %in% c('base','16b')) %>%
dplyr::select(c(Disk,HCT,RBCRecovery,Baffles)) %>%
droplevels() %>%
na.omit()
baf4RR$Disk <- factor(baf4RR$Disk,levels=c('base','16b','matte_20.05','matte_20.05_16b','matte_70.05','matte_70.05_16b'))
ggplot(baf4RR,aes(x=HCT,y=RBCRecovery,color=Baffles))+geom_jitter(width=0.001)
# wilcox.test(RBCRecovery ~ Baffles,data=baf4RR)
baf4RR.lm <- lm(RBCRecovery~HCT*Baffles,data=baf4RR);summary(baf4RR.lm)
nrow(baf4RR)
bloody <- filter(trough,RBCRecovery>0.75) %>% droplevels(.$Disk)
bloody.lm <- lm(HCT*100 ~ Disk/RBCRecovery-1,data=bloody)
summary(bloody.lm)
contrasts(bloody$Disk) <- contr.treatment(n=3,base = 2)
bloody.lm <- lm(RBCRecovery~HCT*Disk,data=bloody)
summary(bloody.lm)
newdata = with(trough,
data.frame(RBCRecovery = RBCRecovery,
Disk = Disk))
trough$HCT_pred <- predict.lm(bloody.lm,newdata)
# Make themes and grouping categories for easier visualization
Disk_axis_theme <- theme(axis.text.x = element_text(angle=45,hjust=1))
wb_colors <- scale_color_gradient2(low="yellow", mid='red', high="Darkred",midpoint=0.5)
plas_colors <- scale_color_gradient2(low="yellow", mid='pink', high="Darkred",midpoint=0.025,limits=c(0,0.1))
spins$DiskType <- spins$Disk
levels(spins$DiskType) <- with(spins,sapply(
list(
Ruffles = Disk[Ruffles&!Wells|Disk %in% c('matte_20.05','matte_70.05')],
Baffles = Disk[Baffles],
Wells   = Disk[Wells],
Moat = c('Moat','Moat2') %>% factor(),
Base = c('base','base_2mm_weir','matte_12H') %>% factor()),
function(x){
x %>% droplevels() %>% levels()
}))
ggplot(spins,aes(Disk,PlasmaRecovery,color=DiskType,shape=Glossy))+
geom_jitter(width=0.1,na.rm=TRUE)+
scale_shape_manual(values=c(1,19))+
Disk_axis_theme +
ggtitle('Plasma recovery (%)')
ggplot(spins,aes(HCT,RBCRecovery,color=DiskType))+
geom_point(na.rm=TRUE)+
scale_shape_manual(values=c(19,1))+
facet_wrap(.~DiskType)+
theme(axis.text.x = element_text(angle=45,hjust=1))+
ggtitle('RBC recovery (%)')
# wb_colors
ggplot(spins,aes(Disk,VFlowdown,shape=Glossy,color=DiskType))+
geom_jitter(width=0.05,na.rm=TRUE)+
Disk_axis_theme+
ggtitle('Total volume of flowdown')+
ylim(1.7,5)+
ylab('Flowdown volume (mL)')
# plas_colors
gplas.sum <- spins %>%
filter(!Disk %in% c('matte_12H','Moat','Moat2')) %>%
droplevels() %>%
group_by(Disk) %>%
summarise(n = n(),
Flowdown = mean(gplas_tot),
ci_Flowdown = qt(0.975,n-1)*sd(gplas_tot)/sqrt(n)
)
ggplot(all.sum,aes(reorder(Disk,PR,mean),PR))+
geom_point()+
geom_errorbar(aes(ymin=PR-ci_Plasma,ymax=PR+ci_Plasma))+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(all.sum,aes(reorder(Disk,PR,mean),PR))+
geom_point()+
geom_errorbar(aes(ymin=PR-ci_Plasma,ymax=PR+ci_Plasma))+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
library(latex2exp)
library(xlsx)
library(ggplot2)
library(dplyr)
library(tidyr)
library(multcomp)
library(htmlTable)
library(car)
knitr::opts_chunk$set(echo = TRUE)
library(latex2exp)
library(xlsx)
library(ggplot2)
library(dplyr)
library(tidyr)
library(multcomp)
library(htmlTable)
library(car)
spins <- read.xlsx2("G:/Documents/MS-Thesis-Pitt/Data-analysis/Spinning.xlsx",
sheetIndex = 1,
colClasses = NA)
spins$Date <- as.Date(spins$Date)
spins$HCT_plas[1] <- NaN
spins$g_trough[1] <- NaN
spins$g_wiped[1]  <- NaN
spins$LongWeir <- !spins$Disk %in% c('16b','base')
spins$Glossy   <- !grepl('matte',spins$Disk)
spins$Baffles  <-  grepl('16b',spins$Disk)
spins$Ruffles  <-  grepl('[0-9]{1,2}x3[long]{0,4}',spins$Disk)
spins$Wells    <-  grepl('[0-9]{2}x[7-9]{1}mm',spins$Disk)
spins$Base     <-  grepl('base',spins$Disk)
spins$VolWB  <- 7.0 + (spins$Trough.Volume-4)*(7.0/8.5) %>% round(.,2)
spins$VolPBS <- 1.5 + (spins$Trough.Volume-4)*(1.5/8.5) %>% round(.,2)
#spins$Trough.Volume <- as.factor(spins$Trough.Volume)
table(spins$Disk,!is.na(spins$HCT))
Temp = 23 #C
rho_PBS <- -5.2037e-6*Temp^2 - 8.1463e-6*Temp + 1.0097
# I got this correlation from
# (http://www.sciencedirect.com/science/article/pii/S003991400400373X)
spins$VolFracPlasma  <- with(spins,{VolWB*(1-HCT)/(VolWB*(1-HCT) + VolPBS)})
spins$RhoSolution    <- with(spins,{(rho_PBS*VolPBS + 1.024*(1-HCT)*VolWB)/(VolPBS + (1-HCT)*VolWB)})
spins$VFlowdown      <- with(spins,{gplas_tot/(RhoSolution*(1-HCT_plas)+1.093*HCT_plas)})
spins[is.na(spins$HCT_plas),]$VFlowdown <- spins[is.na(spins$HCT_plas),]$gplas_tot/1.024
# Some disks have missing HCT_plasma values. For these disks, I approximate the density of the
# flowdown as that of pure plasma. This lets me keep these data with little introduced error.
spins$RBCRecovery    <- with(spins,{VFlowdown*HCT_plas/(VolWB*HCT)*100})
spins$PlasmaRecovery <- with(spins,{VFlowdown*(1-HCT_plas)/(VolPBS+VolWB*(1-HCT))*100})
# Make themes and grouping categories for easier visualization
Disk_axis_theme <- theme(axis.text.x = element_text(angle=45,hjust=1))
wb_colors <- scale_color_gradient2(low="yellow", mid='red', high="Darkred",midpoint=0.5)
plas_colors <- scale_color_gradient2(low="yellow", mid='pink', high="Darkred",midpoint=0.025,limits=c(0,0.1))
spins$DiskType <- spins$Disk
levels(spins$DiskType) <- with(spins,sapply(
list(
Ruffles = Disk[Ruffles&!Wells|Disk %in% c('matte_20.05','matte_70.05')],
Baffles = Disk[Baffles],
Wells   = Disk[Wells],
Moat = c('Moat','Moat2') %>% factor(),
Base = c('base','base_2mm_weir','matte_12H') %>% factor()),
function(x){
x %>% droplevels() %>% levels()
}))
ggplot(spins,aes(Disk,PlasmaRecovery,color=DiskType,shape=Glossy))+
geom_jitter(width=0.1,na.rm=TRUE)+
scale_shape_manual(values=c(1,19))+
Disk_axis_theme +
ggtitle('Plasma recovery (%)')
ggplot(spins,aes(HCT,RBCRecovery,color=DiskType))+
geom_point(na.rm=TRUE)+
scale_shape_manual(values=c(19,1))+
facet_wrap(.~DiskType)+
theme(axis.text.x = element_text(angle=45,hjust=1))+
ggtitle('RBC recovery (%)')
# wb_colors
ggplot(spins,aes(Disk,VFlowdown,shape=Glossy,color=DiskType))+
geom_jitter(width=0.05,na.rm=TRUE)+
Disk_axis_theme+
ggtitle('Total volume of flowdown')+
ylim(1.7,5)+
ylab('Flowdown volume (mL)')
# plas_colors
gplas.sum <- spins %>%
filter(!Disk %in% c('matte_12H','Moat','Moat2')) %>%
droplevels() %>%
group_by(Disk) %>%
summarise(n = n(),
Flowdown = mean(gplas_tot),
ci_Flowdown = qt(0.975,n-1)*sd(gplas_tot)/sqrt(n)
)
PlasmaRecovery.sum <- spins %>%
filter(!Disk %in% c('matte_12H','Moat','Moat2'),!is.na(PlasmaRecovery)) %>%
droplevels() %>%
group_by(Disk) %>%
summarise(npr=n(),
PR = mean(PlasmaRecovery),
ci_Plasma = qt(0.975,npr-1)*sd(PlasmaRecovery)/sqrt(npr)
)
RBCRecovery.sum <- spins %>%
filter(!Disk %in% c('matte_12H','Moat','Moat2'),!is.na(RBCRecovery)) %>%
droplevels() %>%
group_by(Disk) %>%
summarise(nrr=n(),
RR = mean(RBCRecovery),
ci_RBC = qt(0.975,nrr-1)*sd(RBCRecovery)/sqrt(nrr)
)
all.sum <- bind_cols(gplas.sum,
dplyr::select(PlasmaRecovery.sum,-c(Disk)),
dplyr::select(RBCRecovery.sum,-c(Disk,nrr))) %>%
# dplyr::select(.,-c(DiskType1,DiskType2)) %>%
.[with(.,order(-as.numeric(Disk),-PR)),]
knitr::kable(all.sum,caption='Summary by disk')
# htmlTable(cbind(data.frame(all.sum[,1]),txtRound(all.sum[,2:ncol(all.sum)],digits=c(0,1,2,0,1,1,1,1))))
ggplot(all.sum,aes(reorder(Disk,PR,mean),Flowdown))+
geom_point()+
geom_errorbar(aes(ymin=Flowdown-ci_Flowdown,ymax=Flowdown+ci_Flowdown))+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(all.sum,aes(reorder(Disk,PR,mean),PR))+
geom_point()+
geom_errorbar(aes(ymin=PR-ci_Plasma,ymax=PR+ci_Plasma))+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ggplot(all.sum,aes(reorder(Disk,PR,mean),RR))+
#   geom_point()+
#   geom_errorbar(aes(ymin=RR-ci_RBC,ymax=RR+ci_RBC))
features <- spins %>% dplyr::select(Disk,HCT,gplas_tot,RBCRecovery,PlasmaRecovery,Baffles,Glossy,Ruffles,Wells,LongWeir,DiskType)
str(features)
features.lm <- lm(PlasmaRecovery ~ Baffles*Glossy*Ruffles*Wells*LongWeir,data=features);summary(features.lm)
termplot(features.lm,partial.resid = TRUE)
pairs(features)
collect<-spins %>% filter(Donor %in% c('Y','Z')) %>% droplevels()
ggplot(collect,aes(CollectionDelaySeconds,PlasmaRecovery,color=factor(HCT)))+
geom_point()+
xlab('Collection delay time (s)')
collect.lm <- lm(PlasmaRecovery~poly(CollectionDelaySeconds,2)+Donor,data=collect);summary(collect.lm)
spins %>%
group_by(Glossy,Disk) %>%
drop_na(VFlowdown) %>%
filter(VFlowdown>2) %>% # Remove one outlier from matte_70.05
summarise(nspins = n(),
Vol.mean = mean(VFlowdown),
Vol.var = sd(VFlowdown)^2,
SSWDisk = sum((VFlowdown-Vol.mean)^2)) %>%
summarise(nglossy = sum(nspins),
SSWGlossy = sum(SSWDisk)/nglossy)
GM <- 0.02256/0.20121 # ratio of within-Disk nested within glossy MSE
F975 <- qf(0.975,df1=128,df2=29)
F975
sqrt(GM/F975)
sqrt(GM)
sqrt(GM*F975)
ggplot(spins,aes(sample=PlasmaRecovery,color=Glossy))+stat_qq()+facet_wrap(~Disk)
weir <- filter(spins, Disk %in% c('base','base_2mm_weir'))
# compute difference in variance between weir widths.
leveneTest(PlasmaRecovery~Disk,data=weir)
weir %>% droplevels() %>% group_by(Disk) %>% summarise(n=n(),avg=mean(PlasmaRecovery),Var=sd(PlasmaRecovery)^2)
weir.var <- 207/61.4
F975 <- qf(0.975,df1=9,df2=12)
ggplot(weir,aes(Disk,PlasmaRecovery))+geom_jitter(width=0.05)
weir <- filter(spins, Disk %in% c('base','base_2mm_weir'))
# compute difference in variance between weir widths.
leveneTest(PlasmaRecovery~Disk,data=weir)
weir %>% droplevels() %>% group_by(Disk) %>% summarise(n=n(),avg=mean(PlasmaRecovery),Var=sd(PlasmaRecovery)^2)
weir.var <- 207/61.4
F975 <- qf(0.975,df1=9,df2=12)
print(weir.var/F975)
print(weir.var)
print(weir.var*F975)
ggplot(weir,aes(Disk,PlasmaRecovery))+geom_jitter(width=0.05)
weir <- filter(spins, Disk %in% c('base','base_2mm_weir'))
# compute difference in variance between weir widths.
leveneTest(PlasmaRecovery~Disk,data=weir)
weir %>% droplevels() %>% group_by(Disk) %>% summarise(n=n(),avg=mean(PlasmaRecovery),Var=sd(PlasmaRecovery)^2)
weir.var <- 165.8/46.3
F975 <- qf(0.975,df1=9,df2=12)
print(weir.var/F975)
print(weir.var)
print(weir.var*F975)
ggplot(weir,aes(Disk,PlasmaRecovery))+geom_jitter(width=0.05)
weir <- filter(spins, Disk %in% c('base','base_2mm_weir'))
# compute difference in variance between weir widths.
leveneTest(PlasmaRecovery~Disk,data=weir)
weir %>% droplevels() %>% group_by(Disk) %>% summarise(n=n(),avg=mean(PlasmaRecovery),Var=sd(PlasmaRecovery)^2)
weir.var <- 165.8/46.3
F975 <- qf(0.975,df1=9,df2=12)
sqrt(weir.var/F975)
sqrt(weir.var)
sqrt(weir.var*F975)
ggplot(weir,aes(Disk,PlasmaRecovery))+geom_jitter(width=0.05)
t.test(PlasmaRecovery~Disk,data=weir)
59.56387-42.66559
59.56387-42.66559-7.190982
temp <- spins %>% filter(!is.na(PlasmaRecovery),
# Disk %in% c('20.05_16x3','20.05_8x3_1.25x7mm','16b'),
Glossy==TRUE,
!DiskType %in% c('Base','Moat'),
!Disk %in% c('20.035_8x3_1.25x7mm','20.05_16x3_3mL','20.05_16x3_5mL')
) %>%
droplevels()
DiskType.aov <- aov(PlasmaRecovery~DiskType,data=temp);summary(DiskType.aov)
TukeyHSD(DiskType.aov)
plot(TukeyHSD(DiskType.aov))
kruskal.test(PlasmaRecovery~DiskType,data=temp)
# model assumption checking - normality and homoscedascity
ggplot(temp,aes(DiskType,PlasmaRecovery))+geom_violin()+geom_point()
ggplot(temp,aes(sample=PlasmaRecovery,color=DiskType))+stat_qq()+stat_qq_line()
temp %>% group_by(DiskType) %>% summarise(n=n(),PR=mean(PlasmaRecovery),SD=sd(PlasmaRecovery))
# contrasts(temp$DiskType) <- contr.treatment(n=5,base=5)
base.aov <- aov(PlasmaRecovery~DiskType,data=temp);summary(base.aov)
summary(glht(base.aov))
Disk.aov
base.aov
DiskType.aov
temp <- spins %>% filter(!is.na(PlasmaRecovery),
# Disk %in% c('20.05_16x3','20.05_8x3_1.25x7mm','16b'),
Glossy==TRUE,
!DiskType %in% c('Base','Moat'),
!Disk %in% c('20.035_8x3_1.25x7mm','20.05_16x3_3mL','20.05_16x3_5mL')
) %>%
droplevels()
# Test for differences between disk types
DiskType.aov <- aov(PlasmaRecovery~DiskType,data=temp);summary(DiskType.aov)
TukeyHSD(DiskType.aov)
plot(TukeyHSD(DiskType.aov))
summary(glht(DiskType.aov))
kruskal.test(PlasmaRecovery~DiskType,data=temp)
# model assumption checking - normality and homoscedascity
ggplot(temp,aes(DiskType,PlasmaRecovery))+geom_violin()+geom_point()
ggplot(temp,aes(sample=PlasmaRecovery,color=DiskType))+stat_qq()+stat_qq_line()
temp %>% group_by(DiskType) %>% summarise(n=n(),PR=mean(PlasmaRecovery),SD=sd(PlasmaRecovery))
2.7/4
3.9762-1.76124
2.033192-0.22856
temp <- spins %>% filter(!is.na(PlasmaRecovery),
# Disk %in% c('20.05_16x3','20.05_8x3_1.25x7mm','16b'),
Glossy==TRUE,
!DiskType %in% c('Base','Moat'),
# !Disk %in% c('20.035_8x3_1.25x7mm','20.05_16x3_3mL','20.05_16x3_5mL')
) %>%
droplevels()
# Test for differences between disk types
DiskType.aov <- aov(PlasmaRecovery~DiskType,data=temp);summary(DiskType.aov)
TukeyHSD(DiskType.aov)
plot(TukeyHSD(DiskType.aov))
summary(glht(DiskType.aov))
kruskal.test(PlasmaRecovery~DiskType,data=temp)
# model assumption checking - normality and homoscedascity
ggplot(temp,aes(DiskType,PlasmaRecovery))+geom_violin()+geom_point()
ggplot(temp,aes(sample=PlasmaRecovery,color=DiskType))+stat_qq()+stat_qq_line()
temp %>% group_by(DiskType) %>% summarise(n=n(),PR=mean(PlasmaRecovery),SD=sd(PlasmaRecovery))
temp <- spins %>% filter(!is.na(PlasmaRecovery),
# Disk %in% c('20.05_16x3','20.05_8x3_1.25x7mm','16b'),
Glossy==TRUE,
!DiskType %in% c('Base','Moat'),
!Disk %in% c('20.035_8x3_1.25x7mm','20.05_16x3_3mL','20.05_16x3_5mL')
) %>%
droplevels()
# Test for differences between disk types
DiskType.aov <- aov(PlasmaRecovery~DiskType,data=temp);summary(DiskType.aov)
TukeyHSD(DiskType.aov)
plot(TukeyHSD(DiskType.aov))
summary(glht(DiskType.aov))
kruskal.test(PlasmaRecovery~DiskType,data=temp)
# model assumption checking - normality and homoscedascity
ggplot(temp,aes(DiskType,PlasmaRecovery))+geom_violin()+geom_point()
ggplot(temp,aes(sample=PlasmaRecovery,color=DiskType))+stat_qq()+stat_qq_line()
temp %>% group_by(DiskType) %>% summarise(n=n(),PR=mean(PlasmaRecovery),SD=sd(PlasmaRecovery))
spins %>%
group_by(Glossy,Disk) %>%
drop_na(VFlowdown) %>%
filter(VFlowdown>2) %>% # Remove one outlier from matte_70.05
summarise(nspins = n(),
Vol.mean = mean(VFlowdown),
Vol.var = sd(VFlowdown)^2,
SSWDisk = sum((VFlowdown-Vol.mean)^2)) %>%
summarise(nglossy = sum(nspins),
SSWGlossy = sum(SSWDisk)/nglossy)
GM <- 0.02256/0.20121 # ratio of within-Disk nested within glossy MSE
F975 <- qf(0.975,df1=128,df2=29)
F975
sqrt(GM/F975)
sqrt(GM)
sqrt(GM*F975)
ggplot(spins,aes(sample=PlasmaRecovery,color=Glossy))+stat_qq()+facet_wrap(~Disk)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(xlsx)
library(car)
CAraw <- read.xlsx2('G:/Documents/MS-Thesis-Pitt/Data-analysis/contact angles.xlsx',sheetIndex=1,colClasses = NA)
CAraw$Date <- as.Date(CAraw$Date)
printed <- CAraw[CAraw$Finish!='PP',]
ggplot(CAraw,aes(x=Treatment,y=avg,color=Liquid))+geom_point()+facet_grid(Finish~.)
# Duplicate treatment for more descriptive factor name
CAraw$CoatingType <- CAraw$Treatment
# Collapse the factor levels into the type of treatment
levels(CAraw$CoatingType) <- list(plasma=c('blown3min.1', 'blown3min.2',
'quick.dry', 'plas_coated'),
clean= c('as is', 'clean', 'etoh_ace', 'washed',
'wiped', 'wiped_etoh_ace', 'wiped_water'),
paa=   c('paa'),
support=c('support'))
# Remove unwanted factor levels
TreatmentSum <- filter(CAraw,!Treatment %in% c('as is',  'paa', 'support', 'washed', 'wiped_water') &
!Finish %in% c('glass') &
Time=='SS' &
!Liquid %in% c('.1plasma','.33plasma','.67plasma')) %>%
select(.,Finish,Liquid,CoatingType,Treatment,avg) %>%
droplevels()
# Get data for dilution experiments
dil <- filter(CAraw,Date=='2019-06-18') %>% droplevels()
levels(dil$Liquid) <- c(.1,.33,.67,0,1,10)
dil$Liquid <- as.numeric(as.character(dil$Liquid))
ggplot(dil,aes(Liquid,avg,color=Treatment,shape=Finish))+
geom_jitter(width=0.01)+
scale_shape_manual(values=c(19,1))+
xlab('Volume fraction plasma')+
ylab('Contact angle')+
theme_minimal()
# ggtitle('Contact angle in plasma-PBS dilutions')
# continuous dilution levels
dil.lm.a <- lm(avg~Liquid,data=filter(dil,Liquid>0, Finish=='glossy', Treatment=='quick.dry'));summary(dil.lm.a)
dil.lm.i <- lm(avg~Treatment*Liquid,data=dil[dil$Liquid>0,]);summary(dil.lm.i)
Anova(dil.lm.a,type=2)
# Categorical dilution levels
dil.lm.c <- lm(avg~Treatment+factor(Liquid)+Finish,data=dil[dil$Liquid>0,]);summary(dil.lm.c)
# test for lack of fit:
anova(dil.lm.c,dil.lm.a) # no sign of lack of fit
QD <- CAraw %>% filter(Treatment='quick.dry')
QD <- CAraw %>% filter(Treatment=='quick.dry')
QD
QD <- CAraw %>% filter(Treatment=='quick.dry',Finish!='PP')
QD
QD <- CAraw %>% filter(Treatment=='quick.dry',Finish!='PP',Liquid='plasma')
QD <- CAraw %>% filter(Treatment=='quick.dry',Finish!='PP',Liquid=='plasma')
QD %>% head
QD
with(QD,table(Finish,Liquid))
QD <- CAraw %>% filter(Treatment=='quick.dry',Finish!='PP',Liquid=='plasma') %>% droplevels()
with(QD,table(Finish,Liquid))
t.test(avg~Finish,data=QD)
leveneTest(avg~Finish,data=QD)
t.test(avg~Finish,data=QD,var.equal=TRUE)
ggplot(QD,aes(Finish,avg))+geom_point()
ggplot(QD,aes(Finish,avg))+geom_jitter()
ggplot(QD,aes(Finish,avg))+geom_jitter(,width=0.05)
t.test(avg~Finish,data=QD,var.equal=TRUE)
ggplot(QD,aes(sample=avg))+stat_qq(aes(color=Finish))
t.test(avg~Finish,data=QD,var.equal=TRUE)
2/34
install.packages(c("htmlTable", "latex2exp", "multcomp", "xlsx"))
knitr::opts_chunk$set(echo = TRUE)
library(latex2exp)
library(xlsx)
library(xlsx)
install.packages('xlsx',dependencies=TRUE)
library(xlsx)
library(ggplot2)
library(dplyr)
library(tidyr)
library(multcomp)
library(multcomp)
library(htmlTable)
library(car)
knitr::opts_chunk$set(echo = TRUE)
library(latex2exp)
library(xlsx)
a<-1
a
knitr::opts_chunk$set(echo = TRUE)
library(latex2exp)
library(xlsx)
library(xlsx)
